{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u00cdndice","text":"<p>Este m\u00f3dulo aborda el dise\u00f1o, creaci\u00f3n y administraci\u00f3n de bases de datos relacionales en PostgreSQL, incluyendo la definici\u00f3n de tablas, las operaciones SQL b\u00e1sicas, la normalizaci\u00f3n, el uso de claves, consultas complejas, funciones, vistas y la conexi\u00f3n desde aplicaciones Java mediante JDBC.</p>"},{"location":"#contenidos","title":"Contenidos","text":"<ol> <li>Modelado y definici\u00f3n de tablas en PostgreSQL</li> <li>Consultas en PostgreSQL</li> <li>Inserci\u00f3n, uso y eliminaci\u00f3n de datos</li> <li>\u00cdndices y an\u00e1lisis de consultas</li> <li>Programaci\u00f3n con funciones y procedimientos</li> <li>Triggers</li> <li>Casting de tipos</li> <li>Funciones comunes en plpgsql</li> <li>Formatos de fecha en PostgreSQL</li> <li>Instalaci\u00f3n y configuraci\u00f3n de PostgreSQL, PgAdmin y JDBC</li> </ol> <p>Nota: Cada cap\u00edtulo incluye ejemplos pr\u00e1cticos en SQL completamente funcionales para PostgreSQL.</p> <p>Se recomienda disponer de una base de datos local (<code>postgres</code>) para ejecutar las sentencias de prueba.</p>"},{"location":"01-modelado-y-definicion-de-tablas-en-postgresql/","title":"1 \u2013 Modelado y definici\u00f3n de tablas en PostgreSQL","text":""},{"location":"01-modelado-y-definicion-de-tablas-en-postgresql/#elementos-graficos-del-diagrama-entidad-relacion-er","title":"Elementos gr\u00e1ficos del Diagrama Entidad-Relaci\u00f3n (ER)","text":"Elemento Forma en el diagrama Representa Entidad Rect\u00e1ngulo Una tabla Relaci\u00f3n Rombo Asociaci\u00f3n entre dos o m\u00e1s entidades Atributo \u00d3valo Propiedad de una entidad o una relaci\u00f3n Flecha Flecha \u2192 Une entidad (rect\u00e1ngulo) a relaci\u00f3n (rombo) <p>Las flechas siempre van desde una entidad hacia una relaci\u00f3n, nunca al rev\u00e9s. Un atributo puede estar conectado a:</p> <ul> <li>Una entidad: se convertir\u00e1 en una columna en la tabla correspondiente.</li> <li>Una relaci\u00f3n: si la relaci\u00f3n tiene atributos, se transforma en una tabla propia.</li> </ul>"},{"location":"01-modelado-y-definicion-de-tablas-en-postgresql/#representacion-de-cardinalidades","title":"Representaci\u00f3n de cardinalidades","text":"<p>Las cardinalidades indican cu\u00e1ntas veces una entidad puede intervenir en una relaci\u00f3n. Hay dos formas de representarlas gr\u00e1ficamente:</p>"},{"location":"01-modelado-y-definicion-de-tablas-en-postgresql/#forma-1-dos-grupos-de-numeros-mas-precisa","title":"Forma 1 \u2013 Dos grupos de n\u00fameros (m\u00e1s precisa)","text":"Alumno Curso se matricula 0..N 1..M <ul> <li>Cada alumno puede estar matriculado de 1 o mas cursos.</li> <li>Cada curso puede tener matriculados 0 o m\u00e1s alumnos.</li> </ul> <p>Esta forma es muy expl\u00edcita, ya que indica claramente el m\u00ednimo y m\u00e1ximo de participaci\u00f3n de cada entidad en la relaci\u00f3n.</p>"},{"location":"01-modelado-y-definicion-de-tablas-en-postgresql/#forma-2-un-solo-grupo-de-numeros-en-el-rombo","title":"Forma 2 \u2013 Un solo grupo de n\u00fameros en el rombo","text":"Alumno Curso se matricula N:M <ul> <li>Se entiende que un alumno puede estar inscrito en varios cursos.</li> <li>Un curso tiene varios alumnos inscritos.</li> <li>No se distingue entre 0..N y 1..N, ni entre 1..1 y 0..1. Es m\u00e1s compacta pero menos precisa.</li> </ul> Aspecto Forma 1: dos lados Forma 2: en el rombo Precisi\u00f3n Muy alta Media (general) Muestra m\u00ednimos S\u00ed (0..N, 1..1, etc.) No Claridad visual Detallada M\u00e1s simple visualmente Ambig\u00fcedad Ninguna Puede generar confusi\u00f3n Uso com\u00fan Formal, acad\u00e9mico Bocetos, esquemas r\u00e1pidos"},{"location":"01-modelado-y-definicion-de-tablas-en-postgresql/#traduccion-del-modelo-er-al-modelo-relacional-sql","title":"Traducci\u00f3n del modelo ER al modelo relacional (SQL)","text":"Elemento ER Traducci\u00f3n SQL Entidad Tabla con CREATE TABLE Atributo Columna Relaci\u00f3n 1:N Clave for\u00e1nea en el lado N Relaci\u00f3n N:M Nueva tabla intermedia con 2 claves for\u00e1neas Relaci\u00f3n con atributos propios Tabla adicional con claves for\u00e1neas y columnas extra Atributo clave primaria PRIMARY KEY Atributo clave for\u00e1nea FOREIGN KEY Atributo obligatorio NOT NULL Atributo \u00fanico UNIQUE Atributo con condici\u00f3n CHECK (condici\u00f3n)"},{"location":"01-modelado-y-definicion-de-tablas-en-postgresql/#sintaxis-general-de-create-table","title":"Sintaxis general de CREATE TABLE","text":"<pre><code>CREATE TABLE IF NOT EXISTS nombre_tabla (\n    columna1 tipo [restricciones],\n    columna2 tipo [restricciones],\n    ...\n    CONSTRAINT nombre_restriccion CHECK (...),\n    PRIMARY KEY (...),\n    FOREIGN KEY (...) REFERENCES otra_tabla(columna)\n        ON DELETE ... ON UPDATE ...\n);\n</code></pre>"},{"location":"01-modelado-y-definicion-de-tablas-en-postgresql/#tipos-de-datos-mas-usados-en-postgresql","title":"Tipos de datos m\u00e1s usados en PostgreSQL","text":"Tipo Descripci\u00f3n INTEGER N\u00fameros enteros TEXT Texto de longitud variable BOOLEAN TRUE o FALSE DATE Fecha (YYYY-MM-DD) TIMESTAMP Fecha y hora combinadas NUMERIC N\u00fameros decimales de precisi\u00f3n fija SERIAL Entero autoincremental"},{"location":"01-modelado-y-definicion-de-tablas-en-postgresql/#el-tipo-serial","title":"El tipo SERIAL","text":"<pre><code>INTEGER NOT NULL DEFAULT nextval('nombre_secuencia')\n</code></pre> <p>Al usar SERIAL, PostgreSQL crea una secuencia autom\u00e1tica asociada.</p>"},{"location":"01-modelado-y-definicion-de-tablas-en-postgresql/#claves-primarias","title":"Claves primarias","text":"<pre><code>id_empleado SERIAL PRIMARY KEY\n</code></pre> <p>Garantiza unicidad y no permite valores nulos. No necesita NOT NULL ni UNIQUE porque ya est\u00e1n impl\u00edcitos.</p> <pre><code>PRIMARY KEY (id_alumno, id_curso)\n</code></pre> <p>Se utiliza cuando la combinaci\u00f3n de varios campos debe ser \u00fanica. Muy com\u00fan en relaciones N:M.</p>"},{"location":"01-modelado-y-definicion-de-tablas-en-postgresql/#claves-foraneas","title":"Claves for\u00e1neas","text":"<pre><code>id_departamento INTEGER REFERENCES departamentos(id_departamento)\n</code></pre> <pre><code>FOREIGN KEY (id_departamento)\n    REFERENCES departamentos(id_departamento)\n    ON DELETE CASCADE\n    ON UPDATE RESTRICT\n</code></pre> Acci\u00f3n Efecto CASCADE Borra/modifica tambi\u00e9n las filas relacionadas SET NULL Asigna NULL al campo en la tabla dependiente SET DEFAULT Asigna el valor por defecto RESTRICT Impide borrar/modificar si hay filas relacionadas NO ACTION Igual que RESTRICT pero verificado al final de la transacci\u00f3n"},{"location":"01-modelado-y-definicion-de-tablas-en-postgresql/#restricciones-adicionales","title":"Restricciones adicionales","text":"Restricci\u00f3n \u00bfD\u00f3nde se aplica? Significado NOT NULL Columna El valor no puede ser nulo UNIQUE Columna o grupo No puede haber valores repetidos CHECK Columna o tabla Condici\u00f3n que debe cumplirse (CHECK (edad &gt; 0))"},{"location":"01-modelado-y-definicion-de-tablas-en-postgresql/#identificadores-con-comillas-dobles","title":"Identificadores con comillas dobles","text":"<pre><code>CREATE TABLE \"Empleados Activos\" (\n    \"ID Usuario\" SERIAL,\n    \"Nombre Completo\" TEXT\n);\n</code></pre> <pre><code>SELECT \"Nombre Completo\" FROM \"Empleados Activos\";\n</code></pre> <p>Una vez creado as\u00ed, debes usar comillas dobles siempre para referenciar ese campo o tabla.</p>"},{"location":"01-modelado-y-definicion-de-tablas-en-postgresql/#ejemplo-final-con-todos-los-elementos-aplicados","title":"Ejemplo final con todos los elementos aplicados","text":"<pre><code>CREATE TABLE IF NOT EXISTS empleados (\n    id_empleado SERIAL PRIMARY KEY,\n    nombre TEXT NOT NULL,\n    dni TEXT UNIQUE,\n    edad INTEGER CHECK (edad &gt; 17),\n    id_departamento INTEGER REFERENCES departamentos(id_departamento)\n        ON DELETE SET NULL\n        ON UPDATE CASCADE,\n    fecha_ingreso DATE DEFAULT CURRENT_DATE\n);\n</code></pre> <ul> <li>id_empleado es autoincremental y clave primaria.</li> <li>dni debe ser \u00fanico.</li> <li>edad debe ser mayor de 17.</li> <li>id_departamento es una clave for\u00e1nea con ON DELETE SET NULL.</li> <li>fecha_ingreso tiene un valor por defecto (la fecha actual).</li> </ul>"},{"location":"02-consultas-en-postgresql/","title":"2 \u2013 Consultas en PostgreSQL","text":""},{"location":"02-consultas-en-postgresql/#consultas-basicas-select","title":"Consultas b\u00e1sicas: SELECT","text":"<p>Devuelve todas las filas y columnas:</p> <pre><code>SELECT * FROM empleados;\n</code></pre> <p>Puedes seleccionar columnas concretas:</p> <pre><code>SELECT nombre, edad FROM empleados;\n</code></pre>"},{"location":"02-consultas-en-postgresql/#alias-de-columnas","title":"Alias de columnas","text":"<p>Los alias permiten renombrar columnas en la salida:</p> <pre><code>SELECT\n    nombre AS \"Nombre completo\",\n    salario * 1.1 AS \"Salario con subida\"\nFROM empleados;\n</code></pre> <p>Se puede usar AS, aunque es opcional. Si el alias tiene espacios o may\u00fasculas, hay que usar comillas dobles.</p>"},{"location":"02-consultas-en-postgresql/#alias-de-tablas","title":"Alias de tablas","text":"<p>\u00datiles en consultas con m\u00faltiples tablas o JOINs:</p> <pre><code>SELECT\n    e.nombre, \n    d.nombre_departamento\nFROM\n    empleados AS e\nJOIN departamentos AS d\n    ON e.id_departamento = d.id_departamento;\n</code></pre>"},{"location":"02-consultas-en-postgresql/#clausula-where","title":"Cl\u00e1usula WHERE","text":"<p>Filtra los resultados seg\u00fan condiciones.</p> <pre><code>SELECT nombre FROM empleados WHERE edad &gt; 30;\n</code></pre>"},{"location":"02-consultas-en-postgresql/#operadores-habituales","title":"Operadores habituales","text":"Operador Uso = Igual a &lt;&gt; o != Distinto de &lt;, &gt;, &lt;=, &gt;= Comparaciones num\u00e9ricas BETWEEN Rango de valores IN Coincidencia en una lista LIKE Patr\u00f3n textual (%, _) IS NULL Es nulo IS NOT NULL No es nulo"},{"location":"02-consultas-en-postgresql/#ordenacion-y-limites-order-by-y-limit","title":"Ordenaci\u00f3n y l\u00edmites: ORDER BY y LIMIT","text":"<p>Ordena el resultado:</p> <pre><code>SELECT * FROM empleados ORDER BY edad;\n</code></pre> <p>Por defecto es ascendente (ASC). Descendente:</p> <pre><code>ORDER BY edad DESC\n</code></pre> <p>Tambi\u00e9n puedes ordenar por el n\u00famero de columna:</p> <pre><code>SELECT\n    nombre,\n    salario\nFROM\n    empleados\nORDER BY\n    2 DESC;\n</code></pre> <p>Restringe el n\u00famero de filas devueltas:</p> <pre><code>SELECT\n    *\nFROM\n    empleados\nORDER BY\n    salario DESC\nLIMIT 3;\n</code></pre> <p>Empleado con salario m\u00e1s alto:</p> <pre><code>SELECT\n    nombre,\n    salario\nFROM\n    empleados\nORDER BY\n    salario DESC\nLIMIT 1;\n</code></pre> <p>Empleado m\u00e1s joven:</p> <pre><code>SELECT\n    nombre,\n    edad\nFROM\n    empleados\nORDER BY\n    edad ASC\nLIMIT 1;\n</code></pre>"},{"location":"02-consultas-en-postgresql/#tipos-de-join","title":"Tipos de JOIN","text":""},{"location":"02-consultas-en-postgresql/#tablas-de-ejemplo","title":"Tablas de ejemplo","text":"id_producto nombre_producto 1 Camiseta 2 Pantal\u00f3n 3 Zapatos id_color nombre_color 1 Rojo 2 Azul"},{"location":"02-consultas-en-postgresql/#inner-join","title":"INNER JOIN","text":"<p>Solo coincidencias.</p> <pre><code>SELECT\n    *\nFROM\n    productos\n    INNER JOIN colores\n        ON productos.id_producto = colores.id_color;\n</code></pre>"},{"location":"02-consultas-en-postgresql/#left-join","title":"LEFT JOIN","text":"<p>Muestra todos los productos, aunque no tengan color asociado.</p> <pre><code>SELECT\n    *\nFROM\n    productos\n    LEFT JOIN colores\n        ON productos.id_producto = colores.id_color;\n</code></pre> <p>Filtrar productos sin color asignado:</p> <pre><code>SELECT\n    *\nFROM\n    productos\n    LEFT JOIN colores\n        ON productos.id_producto = colores.id_color\nWHERE\n    colores.id_color IS NULL;\n</code></pre>"},{"location":"02-consultas-en-postgresql/#right-join","title":"RIGHT JOIN","text":"<p>Muestra todos los colores, aunque no tengan producto asociado.</p> <pre><code>SELECT\n    *\nFROM\n    productos\n    RIGHT JOIN colores\n        ON productos.id_producto = colores.id_color;\n</code></pre>"},{"location":"02-consultas-en-postgresql/#full-join","title":"FULL JOIN","text":"<p>Devuelve todas las filas de ambas tablas, coincidan o no.</p> <pre><code>SELECT\n    *\nFROM\n    productos\n    FULL JOIN colores\n        ON productos.id_producto = colores.id_color;\n</code></pre>"},{"location":"02-consultas-en-postgresql/#cross-join","title":"CROSS JOIN","text":"<p>Producto cartesiano: todas las combinaciones posibles (3 \u00d7 2 = 6 filas).</p> <pre><code>SELECT\n    *\nFROM\n    productos\n    CROSS JOIN colores;\n</code></pre> JOIN \u00bfQu\u00e9 hace? FULL JOIN Une filas coincidentes y muestra tambi\u00e9n las no relacionadas CROSS JOIN Todas las combinaciones posibles (producto cartesiano)"},{"location":"02-consultas-en-postgresql/#funciones-de-agregacion","title":"Funciones de agregaci\u00f3n","text":"id nombre edad salario departamento 1 Ana 25 1200 Ventas 2 Luis 45 1800 Marketing 3 Marta 30 1500 Ventas 4 Pedro 50 2200 Marketing 5 Clara 29 1600 Ventas <pre><code>SELECT COUNT(*) FROM empleados;             -- 5\nSELECT SUM(salario) FROM empleados;         -- 8300\nSELECT AVG(salario) FROM empleados;         -- 1660\nSELECT MIN(edad), MAX(edad) FROM empleados; -- 25 y 50\n</code></pre>"},{"location":"02-consultas-en-postgresql/#agrupacion-group-by","title":"Agrupaci\u00f3n: GROUP BY","text":"<pre><code>SELECT\n    departamento,\n    COUNT(*) \nFROM\n    empleados \nGROUP BY\n    departamento;\n</code></pre> <p>Regla: todos los campos que est\u00e1n en GROUP BY deben aparecer en el SELECT, salvo funciones de agregaci\u00f3n.</p> <pre><code>SELECT\n    departamento,\n    AVG(salario) \nFROM\n    empleados \nGROUP BY\n    departamento;\n</code></pre> departamento AVG(salario) Ventas 1433.33 Marketing 2000.00"},{"location":"02-consultas-en-postgresql/#having-vs-where","title":"HAVING vs WHERE","text":"Cl\u00e1usula Filtra\u2026 Cu\u00e1ndo se aplica WHERE Filas individuales Antes del GROUP BY HAVING Grupos agregados Despu\u00e9s del GROUP BY <pre><code>SELECT\n    nombre,\n    salario\nFROM\n    empleados\nWHERE\n    salario &gt; 1500;\n</code></pre> <p>Filtra empleados individuales cuyo salario es mayor a 1500.</p> <pre><code>SELECT\n    departamento,\n    COUNT(*) AS empleados\nFROM\n    empleados\nGROUP BY\n    departamento\nHAVING COUNT(*) &gt; 2;\n</code></pre> <p>Filtra grupos (departamentos) que tienen m\u00e1s de 2 empleados.</p>"},{"location":"02-consultas-en-postgresql/#subconsultas","title":"Subconsultas","text":""},{"location":"02-consultas-en-postgresql/#en-where-subconsulta-no-correlacionada","title":"En WHERE (subconsulta NO correlacionada)","text":"<pre><code>SELECT\n    nombre\nFROM\n    empleados\nWHERE\n    salario &gt; (\n        SELECT AVG(salario) FROM empleados\n);\n</code></pre> <p>Compara con el promedio general.</p>"},{"location":"02-consultas-en-postgresql/#en-select","title":"En SELECT","text":"<pre><code>SELECT\n    nombre, \n    (\n        SELECT\n            AVG(edad)\n        FROM\n            empleados\n    ) AS edad_media\nFROM\n    empleados;\n</code></pre> <p>Agrega la media a cada fila.</p>"},{"location":"02-consultas-en-postgresql/#en-from","title":"En FROM","text":"<pre><code>SELECT\n    departamento,\n    total\nFROM\n  (\n      SELECT\n          departamento,\n          COUNT(*) AS total\n      FROM\n          empleados\n      GROUP BY\n          departamento\n  ) AS resumen\nWHERE\n    total &gt; 2;\n</code></pre>"},{"location":"02-consultas-en-postgresql/#subconsulta-correlacionada-vs-no-correlacionada","title":"Subconsulta correlacionada vs no correlacionada","text":"<p>No correlacionada:</p> <pre><code>SELECT\n    nombre\nFROM\n    empleados\nWHERE\n    salario &gt; (SELECT AVG(salario) FROM empleados);\n</code></pre> <p>No depende de la fila externa.</p> <p>Correlacionada:</p> <pre><code>SELECT\n    e.nombre\nFROM\n    empleados e\nWHERE\n    salario &gt; (\n        SELECT\n            AVG(salario)\n        FROM\n            empleados\n        WHERE\n            departamento = e.departamento\n);\n</code></pre> <p>Compara con el promedio del mismo departamento.</p>"},{"location":"03-insercion-uso-y-eliminacion-de-datos/","title":"3 \u2013 Inserci\u00f3n, uso y eliminaci\u00f3n de datos","text":""},{"location":"03-insercion-uso-y-eliminacion-de-datos/#insert-anadir-datos-a-una-tabla","title":"INSERT: A\u00f1adir datos a una tabla","text":""},{"location":"03-insercion-uso-y-eliminacion-de-datos/#forma-basica-con-values","title":"Forma b\u00e1sica con VALUES","text":"<pre><code>INSERT INTO empleados (nombre, edad, salario)\nVALUES ('Ana', 30, 1500);\n</code></pre> <p>Se insertan los valores en el orden de los campos indicados. Puedes omitir los campos si insertas en todos y en orden:</p> <pre><code>INSERT INTO empleados\nVALUES (1, 'Luis', 40, 1800);\n</code></pre>"},{"location":"03-insercion-uso-y-eliminacion-de-datos/#insertar-multiples-filas-con-values","title":"Insertar m\u00faltiples filas con VALUES","text":"<p>Tambi\u00e9n es posible insertar varias filas a la vez:</p> <pre><code>INSERT INTO empleados (nombre, edad, salario)\nVALUES \n  ('Carlos', 25, 1400),\n  ('Luc\u00eda', 28, 1550),\n  ('Mario', 35, 1750);\n</code></pre> <p>Esto es m\u00e1s eficiente que hacer varios INSERT individuales. Todas las filas deben tener el mismo n\u00famero de valores.</p>"},{"location":"03-insercion-uso-y-eliminacion-de-datos/#insert-con-select","title":"INSERT con SELECT","text":"<p>Permite copiar datos desde otra tabla o subconsulta:</p> <pre><code>INSERT INTO\n   empleados_archivados (nombre, edad, salario)\nSELECT\n   nombre, edad, salario\nFROM\n   empleados\nWHERE\n   edad &gt; 60;\n</code></pre> <p>Los campos del SELECT deben coincidir en n\u00famero y tipo con los del INSERT.</p>"},{"location":"03-insercion-uso-y-eliminacion-de-datos/#update-modificar-registros-existentes","title":"UPDATE: Modificar registros existentes","text":"<pre><code>UPDATE\n   empleados\nSET\n   salario = salario * 1.05\nWHERE\n   departamento = 'Ventas';\n</code></pre> <p>Aplica una modificaci\u00f3n filtrada con WHERE. Si hay triggers definidos para UPDATE, se ejecutan autom\u00e1ticamente.</p>"},{"location":"03-insercion-uso-y-eliminacion-de-datos/#delete-eliminar-registros","title":"DELETE: Eliminar registros","text":"<pre><code>DELETE FROM empleados\nWHERE edad &gt; 65;\n</code></pre> <p>Elimina filas que cumplan la condici\u00f3n WHERE. Tambi\u00e9n puede disparar triggers de tipo AFTER DELETE o BEFORE DELETE.</p>"},{"location":"03-insercion-uso-y-eliminacion-de-datos/#uso-de-where-en-update-y-delete","title":"Uso de WHERE en UPDATE y DELETE","text":"<p>Tanto UPDATE como DELETE pueden filtrar filas usando WHERE.</p>"},{"location":"03-insercion-uso-y-eliminacion-de-datos/#ejemplo-en-update-modificacion","title":"Ejemplo en UPDATE (modificaci\u00f3n)","text":"<pre><code>UPDATE\n   productos\nSET\n   stock = stock - 1\nWHERE\n   id_producto = 5;\n</code></pre>"},{"location":"03-insercion-uso-y-eliminacion-de-datos/#ejemplo-en-delete-borrado","title":"Ejemplo en DELETE (borrado)","text":"<pre><code>DELETE FROM usuarios\nWHERE fecha_registro &lt; '2023-01-01';\n</code></pre>"},{"location":"03-insercion-uso-y-eliminacion-de-datos/#truncate-vaciar-una-tabla-completamente","title":"TRUNCATE: Vaciar una tabla completamente","text":"<pre><code>TRUNCATE TABLE empleados;\n</code></pre>"},{"location":"03-insercion-uso-y-eliminacion-de-datos/#diferencias-entre-delete-y-truncate","title":"Diferencias entre DELETE y TRUNCATE","text":"Caracter\u00edstica DELETE TRUNCATE Usa WHERE \u2705 S\u00ed \u274c No Dispara triggers \u2705 S\u00ed \u26a0\ufe0f No (en muchos casos) Puede deshacerse \u2705 S\u00ed (si hay transacci\u00f3n activa) \u2705 S\u00ed (si hay transacci\u00f3n activa) Velocidad M\u00e1s lento (registro por registro) Muy r\u00e1pido Recuperaci\u00f3n Posible con transacciones Posible si se usa en transacci\u00f3n"},{"location":"04-indices-y-analisis-de-consultas/","title":"4 \u2013 \u00cdndices y an\u00e1lisis de consultas","text":""},{"location":"04-indices-y-analisis-de-consultas/#concepto-de-indice","title":"Concepto de \u00edndice","text":"<p>Un \u00edndice es una estructura auxiliar que acelera la b\u00fasqueda y el acceso a los registros de una tabla. Su funci\u00f3n es reducir el n\u00famero de filas que el motor de la base de datos necesita leer para localizar los datos que cumplen una condici\u00f3n. Sin \u00edndice, PostgreSQL tiene que realizar un sequential scan (escaneo secuencial), revisando una por una todas las filas de la tabla. Con un \u00edndice, puede saltar directamente a la ubicaci\u00f3n donde se encuentran los datos relevantes, de forma an\u00e1loga a c\u00f3mo usamos el \u00edndice de un libro para encontrar r\u00e1pidamente una palabra o tema.</p>"},{"location":"04-indices-y-analisis-de-consultas/#estructura-interna-el-indice-b-tree","title":"Estructura interna: el \u00edndice B-tree","text":"<p>El B-tree (Balanced Tree) es el tipo de \u00edndice m\u00e1s com\u00fan en PostgreSQL (y en la mayor\u00eda de los SGBD).</p>"},{"location":"04-indices-y-analisis-de-consultas/#como-funciona-un-b-tree","title":"C\u00f3mo funciona un B-tree","text":"<p>Imagina un \u00e1rbol ordenado: Los nodos intermedios contienen claves que dividen el espacio de b\u00fasqueda. Los nodos hoja contienen punteros a las filas reales en la tabla. El \u00e1rbol se mantiene equilibrado: todas las hojas est\u00e1n a la misma profundidad. Esto garantiza que el tiempo de b\u00fasqueda, inserci\u00f3n y borrado sea logar\u00edtmico: O(log n).</p> <pre><code>-\n            [K=50]\n           /     \\\n    [10,20,30] [60,70,80]\n-\n</code></pre> <p>Cuando buscamos el valor 70, el \u00e1rbol compara: 70 &gt; 50 \u2192 va a la rama derecha. Busca en [60,70,80] \u2192 encuentra la posici\u00f3n exacta \u2192 devuelve la fila correspondiente. El acceso es mucho m\u00e1s r\u00e1pido que recorrer todos los registros secuencialmente.</p>"},{"location":"04-indices-y-analisis-de-consultas/#indices-implicitos","title":"\u00cdndices impl\u00edcitos","text":"<p>PostgreSQL crea autom\u00e1ticamente algunos \u00edndices sin que el usuario los pida:</p> <p>Clave primaria (PRIMARY KEY):</p> <pre><code>CREATE TABLE usuarios (\n    id SERIAL PRIMARY KEY,\n    nombre TEXT\n);\n</code></pre> <p>Crea autom\u00e1ticamente un \u00edndice B-tree sobre id.</p> <p>Restricciones UNIQUE:</p> <pre><code>CREATE TABLE productos (\n    codigo TEXT UNIQUE\n);\n</code></pre> <p>Crea un \u00edndice impl\u00edcito que garantiza la unicidad de codigo. Estos \u00edndices autom\u00e1ticos son esenciales para mantener la integridad referencial y acelerar las b\u00fasquedas por claves.</p>"},{"location":"04-indices-y-analisis-de-consultas/#creacion-de-indices-manuales","title":"Creaci\u00f3n de \u00edndices manuales","text":"<p>\u00cdndice b\u00e1sico:</p> <pre><code>CREATE INDEX idx_usuarios_nombre ON usuarios (nombre);\n</code></pre> <p>\u00cdndice en orden descendente:</p> <pre><code>CREATE INDEX idx_pedidos_fecha_desc ON pedidos (fecha DESC);\n</code></pre> <p>\u00cdndice m\u00faltiple (o compuesto):</p> <pre><code>CREATE INDEX idx_clientes_apellido_ciudad ON clientes (apellido, ciudad);\n</code></pre> <p>Importante: Los \u00edndices m\u00faltiples se aprovechan por su primera columna y las subsecuentes, en ese orden.</p> <p>Por ejemplo:</p> <pre><code>WHERE apellido = 'Garc\u00eda'\n    -- \u2705 usa el \u00edndice.\n\nWHERE apellido = 'Garc\u00eda' AND ciudad = 'Sevilla'\n    -- \u2705 usa el \u00edndice.\n\nWHERE ciudad = 'Sevilla'\n    -- \u274c no usa el \u00edndice\n    -- (la primera columna apellido no se filtra).\n</code></pre> <p>Este comportamiento se conoce como regla del prefijo del \u00edndice.</p> <p>\u00cdndice parcial:</p> <pre><code>CREATE INDEX idx_activos ON empleados (dni) WHERE activo = true;\n</code></pre> <p>Ideal para grandes tablas con muchas filas inactivas.</p> <p>\u00cdndice \u00fanico:</p> <pre><code>CREATE UNIQUE INDEX idx_email_unico ON usuarios (email);\n</code></pre> <p>Garantiza que no se repitan valores en esa columna.</p>"},{"location":"04-indices-y-analisis-de-consultas/#buenas-practicas-en-el-uso-de-indices","title":"Buenas pr\u00e1cticas en el uso de \u00edndices","text":"<ul> <li>Usar \u00edndices en columnas que aparecen con frecuencia en cl\u00e1usulas WHERE, condiciones de JOIN, ORDER BY o GROUP BY.</li> <li>No indexar todo: cada \u00edndice ocupa espacio y ralentiza INSERT, UPDATE y DELETE.</li> <li>Evitar \u00edndices en columnas con baja selectividad (por ejemplo, un campo BOOLEAN con casi todos los valores iguales).</li> <li>Analizar el tama\u00f1o de los \u00edndices.</li> </ul> <pre><code>SELECT relname, pg_size_pretty(pg_total_relation_size(indexrelid))\nFROM pg_stat_user_indexes\nWHERE schemaname = 'public';\n</code></pre> <p>Actualizar estad\u00edsticas regularmente:</p> <pre><code>VACUUM ANALYZE;\n</code></pre> <p>Esto ayuda al optimizador a tomar decisiones m\u00e1s acertadas.</p>"},{"location":"04-indices-y-analisis-de-consultas/#analisis-de-rendimiento-con-explain-y-explain-analyze","title":"An\u00e1lisis de rendimiento con EXPLAIN y EXPLAIN ANALYZE","text":""},{"location":"04-indices-y-analisis-de-consultas/#explain","title":"EXPLAIN","text":"<p>Muestra el plan estimado de ejecuci\u00f3n:</p> <pre><code>EXPLAIN SELECT * FROM usuarios WHERE nombre = 'Juan';\n</code></pre> <p>Salida:</p> <pre><code>Index Scan using idx_usuarios_nombre on usuarios  (cost=0.15..8.17 rows=1 width=48)\n</code></pre> Componente Significado Index Scan Est\u00e1 usando el \u00edndice. cost Estimaci\u00f3n del optimizador."},{"location":"04-indices-y-analisis-de-consultas/#explain-analyze","title":"EXPLAIN ANALYZE","text":"<p>Ejecuta realmente la consulta y muestra los tiempos reales:</p> <pre><code>EXPLAIN ANALYZE SELECT * FROM usuarios WHERE nombre = 'Juan';\n</code></pre> <p>Ejemplo de salida:</p> <pre><code>Index Scan using idx_usuarios_nombre on usuarios  (cost=0.15..8.17 rows=1 width=48)\n(actual time=0.030..0.035 rows=1 loops=1)\n</code></pre> Componente Significado cost Coste estimado (cuanto menor, mejor). actual time Tiempo real de ejecuci\u00f3n. rows N\u00famero de filas encontradas. loops Veces que se repiti\u00f3 el plan (en subconsultas o bucles)."},{"location":"04-indices-y-analisis-de-consultas/#comparativa-de-rendimiento-sin-indice-y-con-indice","title":"Comparativa de rendimiento: sin \u00edndice y con \u00edndice","text":"<p>Sup\u00f3n que tenemos 1 mill\u00f3n de filas en usuarios:</p> <pre><code>SELECT * FROM usuarios WHERE nombre = 'Juan';\n</code></pre> <p>Sin \u00edndice:</p> <pre><code>Seq Scan on usuarios (cost=0.00..25000.00 rows=1 width=48)\n(actual time=50.000..50.001 rows=1 loops=1)\n</code></pre> <p>Con \u00edndice:</p> <pre><code>Index Scan using idx_usuarios_nombre on usuarios (cost=0.15..8.17 rows=1 width=48)\n(actual time=0.035..0.036 rows=1 loops=1)\n</code></pre> <p>El acceso pasa de 50 ms a 0.03 ms, un ahorro enorme.</p>"},{"location":"04-indices-y-analisis-de-consultas/#mantenimiento-de-indices","title":"Mantenimiento de \u00edndices","text":"<p>Comprobar el uso de \u00edndices:</p> <pre><code>SELECT\n   relname AS tabla,\n   indexrelname AS indice,\n   idx_scan AS veces_usado,\n   idx_tup_read AS tuplas_leidas,\n   idx_tup_fetch AS tuplas_devueltas\nFROM\n   pg_stat_user_indexes\nWHERE\n   schemaname = 'public';\n</code></pre> <p>Esta vista muestra cu\u00e1ntas veces se ha utilizado cada \u00edndice desde el \u00faltimo reinicio de estad\u00edsticas.</p> <p>Reindexar un \u00edndice espec\u00edfico:</p> <pre><code>REINDEX INDEX idx_usuarios_nombre;\n</code></pre> <p>Reindexar una tabla completa:</p> <pre><code>REINDEX TABLE usuarios;\n</code></pre> <p>Ver todos los \u00edndices existentes:</p> <pre><code>\\di\n</code></pre>"},{"location":"04-indices-y-analisis-de-consultas/#ejemplo-completo","title":"Ejemplo completo","text":"<p>Supongamos una tabla de pedidos:</p> <pre><code>CREATE TABLE pedidos (\n    id SERIAL PRIMARY KEY,\n    cliente_id INT,\n    fecha DATE,\n    total DECIMAL\n);\n</code></pre> <p>Creamos un \u00edndice para acelerar b\u00fasquedas por fecha:</p> <pre><code>CREATE INDEX idx_pedidos_fecha ON pedidos (fecha);\n</code></pre> <p>Consultamos:</p> <pre><code>EXPLAIN ANALYZE\nSELECT * FROM pedidos\nWHERE fecha BETWEEN '2025-01-01' AND '2025-03-31';\n</code></pre> <p>Si el rango abarca pocas filas: \u201cIndex Scan\u201d. Si abarca la mayor\u00eda: \u201cSeq Scan\u201d (el optimizador decide que leer toda la tabla es m\u00e1s r\u00e1pido).</p>"},{"location":"04-indices-y-analisis-de-consultas/#resumen-final","title":"Resumen final","text":"<ul> <li>Los \u00edndices mejoran la velocidad de lectura pero empeoran ligeramente la escritura.</li> <li>Los B-trees son los \u00edndices por defecto y m\u00e1s vers\u00e1tiles.</li> <li>Los \u00edndices compuestos funcionan en orden de las columnas, empezando por la primera.</li> <li>Usa EXPLAIN ANALYZE para comprobar si se usan correctamente.</li> <li>Revisa estad\u00edsticas peri\u00f3dicamente y evita sobreindexar.</li> </ul>"},{"location":"05-programacion-con-funciones-y-procedimientos/","title":"5 \u2013 Programaci\u00f3n con funciones y procedimientos","text":""},{"location":"05-programacion-con-funciones-y-procedimientos/#diferencias-entre-funcion-y-procedimiento","title":"Diferencias entre funci\u00f3n y procedimiento","text":"Elemento Funci\u00f3n Procedimiento Devuelve un valor \u2705 S\u00ed, con RETURN \u274c No Llamada En una SELECT o expresi\u00f3n Con el comando CALL Se puede usar en SQL \u2705 S\u00ed \u274c No directamente Tiene OUT \u274c Generalmente no \u2705 S\u00ed"},{"location":"05-programacion-con-funciones-y-procedimientos/#ejemplo-de-llamada","title":"Ejemplo de llamada","text":"<p>Llamada a funci\u00f3n:</p> <pre><code>SELECT mi_funcion(5);\n</code></pre> <p>Llamada a procedimiento:</p> <pre><code>CALL mi_procedimiento('dato');\n</code></pre>"},{"location":"05-programacion-con-funciones-y-procedimientos/#esqueleto-de-una-funcion-o-procedimiento","title":"Esqueleto de una funci\u00f3n o procedimiento","text":"<p>Ambos comienzan con CREATE OR REPLACE y pueden tener:</p> <ul> <li>Secci\u00f3n DECLARE: para definir variables internas.</li> <li>Bloque BEGIN ... END: cuerpo principal.</li> <li>Secci\u00f3n EXCEPTION: captura de errores.</li> </ul>"},{"location":"05-programacion-con-funciones-y-procedimientos/#funcion","title":"Funci\u00f3n","text":"<pre><code>CREATE OR REPLACE FUNCTION suma(a INT, b INT)\nRETURNS INT AS $$\nDECLARE\n  resultado INT;\nBEGIN\n  resultado := a + b;\n  RETURN resultado;\nEND;\n$$ LANGUAGE plpgsql;\n</code></pre>"},{"location":"05-programacion-con-funciones-y-procedimientos/#procedimiento","title":"Procedimiento","text":"<pre><code>CREATE OR REPLACE PROCEDURE imprimir_suma(a INT, b INT)\nAS $$\nDECLARE\n  resultado INT;\nBEGIN\n  resultado := a + b;\n  RAISE NOTICE 'La suma es: %', resultado;\nEND;\n$$ LANGUAGE plpgsql;\n</code></pre>"},{"location":"05-programacion-con-funciones-y-procedimientos/#parametros-in-out-e-inout","title":"Par\u00e1metros IN, OUT e INOUT","text":"Tipo Descripci\u00f3n IN Valor de entrada (por defecto) OUT Par\u00e1metro que devuelve un valor INOUT Sirve como entrada y salida <pre><code>CREATE OR REPLACE PROCEDURE dame_doble(IN entrada INT, OUT salida INT)\nAS $$\nBEGIN\n  salida := entrada * 2;\nEND;\n$$ LANGUAGE plpgsql;\n</code></pre> <p>Llamada desde consola: CALL dame_doble(5, x);  -- x = 10</p>"},{"location":"05-programacion-con-funciones-y-procedimientos/#nota-importante-sobre-excepciones","title":"Nota importante sobre excepciones","text":"<p>Cada procedimiento o funci\u00f3n en PostgreSQL se ejecuta autom\u00e1ticamente dentro de una transacci\u00f3n. Por eso NO es necesario iniciar manualmente una transacci\u00f3n con BEGIN. Sin embargo, si se lanza una excepci\u00f3n (RAISE EXCEPTION) y no se captura con EXCEPTION, se produce un rollback impl\u00edcito de toda la funci\u00f3n o procedimiento.</p>"},{"location":"05-programacion-con-funciones-y-procedimientos/#condicionales","title":"Condicionales","text":""},{"location":"05-programacion-con-funciones-y-procedimientos/#if-elsif-else","title":"IF / ELSIF / ELSE","text":"<pre><code>IF total &gt; 100 THEN\n  RAISE NOTICE 'Total alto';\nELSIF total = 100 THEN\n  RAISE NOTICE 'Total exacto';\nELSE\n  RAISE NOTICE 'Total bajo';\nEND IF;\n</code></pre>"},{"location":"05-programacion-con-funciones-y-procedimientos/#case","title":"CASE","text":"<pre><code>CASE tipo_producto\n  WHEN 'A' THEN\n    precio := 10;\n  WHEN 'B' THEN\n    precio := 15;\n  ELSE\n    precio := 5;\nEND CASE;\n</code></pre>"},{"location":"05-programacion-con-funciones-y-procedimientos/#bucles","title":"Bucles","text":""},{"location":"05-programacion-con-funciones-y-procedimientos/#loop-con-exit","title":"LOOP con EXIT","text":"<pre><code>LOOP\n  total := total + 1;\n  EXIT WHEN total &gt;= 5;\nEND LOOP;\n</code></pre>"},{"location":"05-programacion-con-funciones-y-procedimientos/#while","title":"WHILE","text":"<pre><code>WHILE stock &gt; 0 LOOP\n  stock := stock - 1;\nEND LOOP;\n</code></pre>"},{"location":"05-programacion-con-funciones-y-procedimientos/#for-in-select","title":"FOR IN SELECT","text":"<pre><code>FOR fila IN SELECT * FROM productos LOOP\n  RAISE NOTICE 'Producto: %', fila.nombre;\nEND LOOP;\n</code></pre>"},{"location":"05-programacion-con-funciones-y-procedimientos/#variable-magica-found","title":"Variable m\u00e1gica FOUND","text":"<p>FOUND indica si la \u00faltima operaci\u00f3n de tipo SELECT INTO, FETCH, UPDATE, DELETE, etc. encontr\u00f3 al menos una fila.</p> <pre><code>LOOP\n  FETCH mi_cursor INTO fila;\n  EXIT WHEN NOT FOUND;\n  -- procesar fila\nEND LOOP;\n</code></pre> <p>Tambi\u00e9n \u00fatil para salir de bucles si ya no hay m\u00e1s resultados.</p>"},{"location":"05-programacion-con-funciones-y-procedimientos/#cursores-en-postgresql","title":"Cursores en PostgreSQL","text":"<p>Un cursor permite recorrer los resultados de una consulta fila por fila.</p>"},{"location":"05-programacion-con-funciones-y-procedimientos/#como-se-declara-un-cursor","title":"\u00bfC\u00f3mo se declara un cursor?","text":"<pre><code>DECLARE\n  cur_empleados CURSOR FOR\n    SELECT * FROM empleados ORDER BY id;\n</code></pre>"},{"location":"05-programacion-con-funciones-y-procedimientos/#ejemplo-completo-recorrido-ascendente","title":"Ejemplo completo: recorrido ascendente","text":"<pre><code>DO $$\nDECLARE\n  cur_empleados CURSOR FOR\n    SELECT * FROM empleados ORDER BY id;\n  fila RECORD;\nBEGIN\n  OPEN cur_empleados;\n  FETCH NEXT FROM cur_empleados INTO fila;\n\n  WHILE FOUND LOOP\n    RAISE NOTICE 'Empleado: % (% a\u00f1os)', fila.nombre, fila.edad;\n    FETCH NEXT FROM cur_empleados INTO fila;\n  END LOOP;\n\n  CLOSE cur_empleados;\nEND;\n$$;\n</code></pre>"},{"location":"05-programacion-con-funciones-y-procedimientos/#ejemplo-completo-recorrido-descendente","title":"Ejemplo completo: recorrido descendente","text":"<pre><code>DO $$\nDECLARE\n  cur_empleados CURSOR FOR\n    SELECT * FROM empleados ORDER BY id;\n  fila RECORD;\nBEGIN\n  OPEN cur_empleados;\n  FETCH LAST FROM cur_empleados INTO fila;\n\n  WHILE FOUND LOOP\n    RAISE NOTICE 'Empleado: % (% a\u00f1os)', fila.nombre, fila.edad;\n    FETCH PRIOR FROM cur_empleados INTO fila;\n  END LOOP;\n\n  CLOSE cur_empleados;\nEND;\n$$;\n</code></pre>"},{"location":"05-programacion-con-funciones-y-procedimientos/#resumen-direcciones-de-fetch","title":"Resumen: direcciones de FETCH","text":"Direcci\u00f3n Descripci\u00f3n NEXT Fila siguiente (por defecto) PRIOR Fila anterior FIRST Primera fila LAST \u00daltima fila <ul> <li>Siempre cerrar el cursor con CLOSE al final.</li> <li>Usar ORDER BY si el orden es importante.</li> <li>Utilizar FOUND para saber si FETCH devolvi\u00f3 fila.</li> </ul>"},{"location":"05-programacion-con-funciones-y-procedimientos/#variables-tipo-record","title":"Variables tipo RECORD","text":"<p>Las variables RECORD permiten guardar varios campos sin declarar uno por uno.</p> <pre><code>DECLARE\n  empleado RECORD;\n\nSELECT\n  * INTO empleado\nFROM\n   empleados\nWHERE id = 1;\n\nRAISE NOTICE 'Nombre: %, Salario: %', empleado.nombre, empleado.salario;\n</code></pre> <p>Uso con FETCH:</p> <pre><code>FETCH cur_empleados INTO empleado;\nRAISE NOTICE 'ID: %, Nombre: %', empleado.id, empleado.nombre;\n</code></pre>"},{"location":"05-programacion-con-funciones-y-procedimientos/#raise-notice-y-raise-exception","title":"RAISE NOTICE y RAISE EXCEPTION","text":"<pre><code>RAISE NOTICE 'ID: %, Nombre: %', id, nombre;\n</code></pre> <pre><code>IF salario &lt; 0 THEN\n  RAISE EXCEPTION 'Salario negativo: %', salario;\nEND IF;\n</code></pre> <p>Los placeholders (%) se sustituyen por los valores en orden.</p>"},{"location":"05-programacion-con-funciones-y-procedimientos/#bloques-begin-exception","title":"Bloques BEGIN \u2026 EXCEPTION","text":"<pre><code>BEGIN\n  SELECT * INTO empleado FROM empleados WHERE id = 999;\nEXCEPTION\n  WHEN NO_DATA_FOUND THEN\n    RAISE NOTICE 'No se encontr\u00f3 el empleado';\n  WHEN TOO_MANY_ROWS THEN\n    RAISE NOTICE 'Demasiados resultados';\n  WHEN OTHERS THEN\n    RAISE NOTICE 'Error inesperado';\nEND;\n</code></pre> <p>Captura localizada con bloques anidados:</p> <pre><code>BEGIN\n  BEGIN\n    SELECT * INTO emp FROM empleados WHERE activo = TRUE;\n  EXCEPTION\n    WHEN OTHERS THEN\n      RAISE NOTICE 'Error solo aqu\u00ed';\n  END;\nEND;\n</code></pre>"},{"location":"05-programacion-con-funciones-y-procedimientos/#select-into","title":"SELECT INTO","text":""},{"location":"05-programacion-con-funciones-y-procedimientos/#ejemplo-basico-una-sola-columna","title":"Ejemplo b\u00e1sico (una sola columna)","text":"<pre><code>DECLARE\n  salario NUMERIC;\nBEGIN\n  SELECT sueldo INTO salario\n  FROM empleados\n  WHERE id = 5;\nEND;\n</code></pre> <p>Si no se encuentra ninguna fila, la variable toma el valor NULL. Si se encuentran varias, se toma solo la primera.</p>"},{"location":"05-programacion-con-funciones-y-procedimientos/#select-into-con-multiples-columnas","title":"SELECT INTO con m\u00faltiples columnas","text":"<pre><code>DECLARE\n  nombre TEXT;\n  edad INT;\nBEGIN\n  SELECT nombre, edad INTO nombre, edad\n  FROM empleados\n  WHERE id = 1;\nEND;\n</code></pre> <pre><code>DECLARE\n  emp RECORD;\nBEGIN\n  SELECT id, nombre, edad INTO emp\n  FROM empleados\n  WHERE id = 1;\n\n  RAISE NOTICE 'Nombre: %, Edad: %', emp.nombre, emp.edad;\nEND;\n</code></pre>"},{"location":"05-programacion-con-funciones-y-procedimientos/#select-into-strict","title":"SELECT INTO STRICT","text":"Situaci\u00f3n Excepci\u00f3n lanzada Ninguna fila encontrada NO_DATA_FOUND M\u00e1s de una fila encontrada TOO_MANY_ROWS <pre><code>DO $$\nDECLARE\n  emp RECORD;\nBEGIN\n  BEGIN\n    SELECT id, nombre, salario INTO STRICT emp\n    FROM empleados\n    WHERE activo = TRUE;\n\n    RAISE NOTICE 'Empleado activo: % con salario %', emp.nombre, emp.salario;\n  EXCEPTION\n    WHEN NO_DATA_FOUND THEN\n      RAISE NOTICE 'No hay empleados activos';\n    WHEN TOO_MANY_ROWS THEN\n      RAISE NOTICE 'Hay m\u00e1s de un empleado activo';\n  END;\nEND;\n$$;\n</code></pre>"},{"location":"05-programacion-con-funciones-y-procedimientos/#rollback-implicito","title":"Rollback impl\u00edcito","text":"<p>Cuando se produce una excepci\u00f3n no capturada, PostgreSQL hace un rollback autom\u00e1tico de todo el procedimiento o funci\u00f3n.</p> <pre><code>IF saldo &lt; 0 THEN\n  RAISE EXCEPTION 'Saldo negativo: %', saldo;\nEND IF;\n</code></pre> <p>Si no se captura, revierte todos los cambios realizados dentro de la funci\u00f3n.</p>"},{"location":"06-triggers/","title":"6 \u2013 Triggers","text":"<p>Un trigger (disparador) es un mecanismo autom\u00e1tico que se ejecuta como respuesta a un evento sobre una tabla o vista. Puede activarse con operaciones INSERT, UPDATE, DELETE o incluso DDL (como CREATE TABLE o ALTER). En resumen:</p> <p>Un trigger act\u00faa como un \"reaccionador\" dentro de la base de datos: \u201cCuando ocurra X en la tabla Y, ejecuta autom\u00e1ticamente el c\u00f3digo Z.\u201d</p>"},{"location":"06-triggers/#para-que-sirven-los-triggers","title":"\u00bfPara qu\u00e9 sirven los triggers?","text":"<ul> <li>Mantener integridad l\u00f3gica entre tablas (por ejemplo, borrar l\u00edneas de pedido al borrar un pedido).</li> <li>Auditar cambios: registrar en una tabla qui\u00e9n modific\u00f3 un registro y cu\u00e1ndo.</li> <li>Validar o corregir datos antes de guardarlos (convertir texto, comprobar rangos, etc.).</li> <li>Sincronizar informaci\u00f3n: actualizar totales o estad\u00edsticas al cambiar datos base.</li> </ul>"},{"location":"06-triggers/#tipos-de-triggers-en-postgresql","title":"Tipos de triggers en PostgreSQL","text":""},{"location":"06-triggers/#segun-el-momento","title":"Seg\u00fan el momento","text":"Tipo Se ejecuta... Uso t\u00edpico BEFORE Antes de la operaci\u00f3n Validar, modificar o impedir cambios AFTER Despu\u00e9s de la operaci\u00f3n Registrar cambios, propagar datos INSTEAD OF En lugar de la operaci\u00f3n (solo vistas) Personalizar vistas actualizables"},{"location":"06-triggers/#segun-el-alcance","title":"Seg\u00fan el alcance","text":"Tipo Act\u00faa sobre... Ejemplo FOR EACH ROW Cada fila afectada Registrar log por cada registro insertado FOR EACH STATEMENT Una vez por sentencia Calcular totales tras un UPDATE masivo"},{"location":"06-triggers/#estructura-general-de-un-trigger","title":"Estructura general de un trigger","text":"<p>Un trigger tiene dos componentes:</p> <p>1- Una funci\u00f3n PL/pgSQL que define la l\u00f3gica.</p> <p>2- Una declaraci\u00f3n CREATE TRIGGER que la asocia a una tabla y evento.</p>"},{"location":"06-triggers/#paso-1-crear-tabla-principal","title":"Paso 1. Crear tabla principal","text":"<pre><code>CREATE TABLE empleados (\n    id SERIAL PRIMARY KEY,\n    nombre TEXT,\n    salario NUMERIC(10,2)\n);\n</code></pre>"},{"location":"06-triggers/#paso-2-crear-tabla-de-auditoria","title":"Paso 2. Crear tabla de auditor\u00eda","text":"<pre><code>CREATE TABLE log_empleados (\n    id SERIAL PRIMARY KEY,\n    empleado_id INT,\n    accion TEXT,\n    fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    usuario TEXT\n);\n</code></pre>"},{"location":"06-triggers/#paso-3-crear-la-funcion-trigger","title":"Paso 3. Crear la funci\u00f3n trigger","text":"<pre><code>CREATE OR REPLACE FUNCTION registrar_cambio_empleado()\nRETURNS TRIGGER AS $$\nBEGIN\n    IF TG_OP = 'INSERT' THEN\n        INSERT INTO log_empleados (empleado_id, accion, usuario)\n        VALUES (NEW.id, 'INSERT', current_user);\n\n    ELSIF TG_OP = 'UPDATE' THEN\n        INSERT INTO log_empleados (empleado_id, accion, usuario)\n        VALUES (NEW.id, 'UPDATE', current_user);\n\n    ELSIF TG_OP = 'DELETE' THEN\n        INSERT INTO log_empleados (empleado_id, accion, usuario)\n        VALUES (OLD.id, 'DELETE', current_user);\n    END IF;\n\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n</code></pre> Elemento Explicaci\u00f3n TG_OP Operaci\u00f3n (INSERT, UPDATE, DELETE) NEW Fila nueva (INSERT/UPDATE) OLD Fila anterior (UPDATE/DELETE) current_user Usuario que ejecut\u00f3 la acci\u00f3n"},{"location":"06-triggers/#paso-4-asociar-el-trigger-a-la-tabla","title":"Paso 4. Asociar el trigger a la tabla","text":"<pre><code>CREATE TRIGGER tr_log_empleados\nAFTER INSERT OR UPDATE OR DELETE\nON empleados\nFOR EACH ROW\nEXECUTE FUNCTION registrar_cambio_empleado();\n</code></pre> Elemento Significado AFTER Se ejecuta despu\u00e9s de la acci\u00f3n. FOR EACH ROW Act\u00faa por cada fila. EXECUTE FUNCTION Llama a la funci\u00f3n PL/pgSQL definida."},{"location":"06-triggers/#ejemplo-de-funcionamiento","title":"Ejemplo de funcionamiento","text":"<pre><code>INSERT INTO empleados (nombre, salario)\nVALUES ('Luc\u00eda', 2500.00);\n</code></pre> <p>PostgreSQL ejecuta autom\u00e1ticamente:</p> <pre><code>INSERT INTO log_empleados (empleado_id, accion, usuario)\nVALUES (1, 'INSERT', 'juanma');\n</code></pre> <p>El log se rellena sin intervenci\u00f3n manual del programador.</p>"},{"location":"06-triggers/#ejemplo-de-trigger-before-validacion-de-datos","title":"Ejemplo de trigger BEFORE (validaci\u00f3n de datos)","text":"<pre><code>CREATE OR REPLACE FUNCTION validar_salario()\nRETURNS TRIGGER AS $$\nBEGIN\n    IF NEW.salario &lt; 1000 THEN\n        RAISE EXCEPTION 'El salario m\u00ednimo debe ser 1000 euros';\n    END IF;\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER tr_validar_salario\nBEFORE INSERT OR UPDATE ON empleados\nFOR EACH ROW\nEXECUTE FUNCTION validar_salario();\n</code></pre> <p>Si se intenta insertar un salario menor a 1000, la operaci\u00f3n se cancela. El trigger BEFORE act\u00faa antes de escribir los datos.</p>"},{"location":"06-triggers/#ejemplo-con-instead-of-vistas-actualizables","title":"Ejemplo con INSTEAD OF (vistas actualizables)","text":"<pre><code>CREATE VIEW vista_empleados AS\nSELECT id, nombre, salario FROM empleados WHERE salario &gt; 2000;\n</code></pre> <pre><code>CREATE OR REPLACE FUNCTION insertar_en_vista()\nRETURNS TRIGGER AS $$\nBEGIN\n    INSERT INTO empleados (nombre, salario) VALUES (NEW.nombre, NEW.salario);\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER tr_insertar_vista\nINSTEAD OF INSERT ON vista_empleados\nFOR EACH ROW\nEXECUTE FUNCTION insertar_en_vista();\n</code></pre> <p>Permite ejecutar INSERT sobre una vista que, internamente, inserta en la tabla real.</p>"},{"location":"06-triggers/#variables-utiles-dentro-de-un-trigger","title":"Variables \u00fatiles dentro de un trigger","text":"Variable Descripci\u00f3n TG_OP Tipo de operaci\u00f3n (INSERT, UPDATE, DELETE) TG_TABLE_NAME Nombre de la tabla afectada TG_WHEN Momento del trigger (BEFORE, AFTER, INSTEAD OF) NEW Fila nueva (solo INSERT y UPDATE) OLD Fila antigua (solo UPDATE y DELETE) TG_ARGV[] Argumentos pasados al trigger"},{"location":"06-triggers/#buenas-practicas-con-triggers","title":"Buenas pr\u00e1cticas con triggers","text":"<ul> <li>Usar solo cuando sea necesario, ya que pueden complicar la depuraci\u00f3n.</li> <li>Documentar claramente cada trigger y su funci\u00f3n.</li> <li>Evitar operaciones pesadas dentro del trigger.</li> <li>Usar AFTER para auditor\u00edas y BEFORE para validaciones.</li> <li>Probar y depurar con cuidado, usando RAISE NOTICE para depuraci\u00f3n.</li> </ul> <pre><code>RAISE NOTICE 'Se ha insertado el empleado %', NEW.nombre;\n</code></pre>"},{"location":"06-triggers/#como-ver-y-eliminar-triggers","title":"C\u00f3mo ver y eliminar triggers","text":"<p>Listar triggers de una tabla:</p> <pre><code>\\d nombre_tabla\n</code></pre> <pre><code>SELECT tgname, tgtype::regtype, tgfoid::regproc\nFROM pg_trigger\nWHERE tgrelid = 'empleados'::regclass;\n</code></pre> <p>Eliminar un trigger:</p> <pre><code>DROP TRIGGER tr_log_empleados ON empleados;\n</code></pre> <p>Eliminar la funci\u00f3n asociada:</p> <pre><code>DROP FUNCTION registrar_cambio_empleado();\n</code></pre>"},{"location":"07-casting-de-tipos/","title":"7 \u2013 Casting de tipos","text":"<p>En PostgreSQL puedes convertir un dato de un tipo a otro usando el operador de conversi\u00f3n (::) o la funci\u00f3n CAST().</p>"},{"location":"07-casting-de-tipos/#sintaxis-general","title":"Sintaxis general","text":"<pre><code>valor::tipo\n</code></pre> <pre><code>CAST(valor AS tipo)\n</code></pre>"},{"location":"07-casting-de-tipos/#ejemplos-de-conversiones-comunes","title":"Ejemplos de conversiones comunes","text":""},{"location":"07-casting-de-tipos/#texto-a-numero","title":"Texto a n\u00famero","text":"<pre><code>SELECT '123'::INTEGER;\n</code></pre>"},{"location":"07-casting-de-tipos/#numero-a-texto","title":"N\u00famero a texto","text":"<pre><code>SELECT 99::TEXT;\n</code></pre>"},{"location":"07-casting-de-tipos/#texto-a-fecha","title":"Texto a fecha","text":"<pre><code>SELECT '2025-09-27'::DATE;\n</code></pre>"},{"location":"07-casting-de-tipos/#timestamp-a-date-descarta-la-hora","title":"TIMESTAMP a DATE (descarta la hora)","text":"<pre><code>SELECT CURRENT_TIMESTAMP::DATE;\n</code></pre>"},{"location":"07-casting-de-tipos/#alternativa-con-cast","title":"Alternativa con CAST","text":"<pre><code>SELECT CAST('123' AS INTEGER);\n</code></pre>"},{"location":"08-funciones-comunes-en-plpgsql/","title":"8 \u2013 Funciones comunes en PL/pgSQL","text":""},{"location":"08-funciones-comunes-en-plpgsql/#funciones-de-fecha","title":"Funciones de fecha","text":"<pre><code>SELECT CURRENT_DATE;               -- Solo la fecha\nSELECT CURRENT_TIME;               -- Solo la hora\nSELECT NOW();                      -- Fecha y hora con zona horaria\nSELECT DATE_TRUNC('month', NOW()); -- Recorta al mes\nSELECT EXTRACT(DAY FROM NOW());    -- D\u00eda actual\n</code></pre>"},{"location":"08-funciones-comunes-en-plpgsql/#funciones-de-texto","title":"Funciones de texto","text":"<pre><code>SELECT UPPER('hola');              -- HOLA\nSELECT LOWER('TEXTO');             -- texto\nSELECT LENGTH('hola mundo');       -- 11\nSELECT TRIM('  hola  ');           -- 'hola'\nSELECT CONCAT('Hola', ' mundo');   -- 'Hola mundo'\n</code></pre>"},{"location":"08-funciones-comunes-en-plpgsql/#funciones-matematicas","title":"Funciones matem\u00e1ticas","text":"<pre><code>SELECT ABS(-8);             -- 8\nSELECT GREATEST(10, 3, 5);  -- 10\nSELECT LEAST(10, 3, 5);     -- 3\n</code></pre>"},{"location":"08-funciones-comunes-en-plpgsql/#funciones-condicionales","title":"Funciones condicionales","text":"<pre><code>SELECT COALESCE(NULL, 'valor'); -- devuelve 'valor'\n</code></pre>"},{"location":"09-formatos-de-fecha-en-postgresql/","title":"9 \u2013 Formatos de fecha en PostgreSQL","text":""},{"location":"09-formatos-de-fecha-en-postgresql/#formato-natural-locale-espanola","title":"Formato natural (locale espa\u00f1ola)","text":"<p>Cuando el sistema usa la configuraci\u00f3n regional espa\u00f1ola, el formato habitual de fecha es: '27/09/2025 15:30:00' (d\u00eda/mes/a\u00f1o + hora). Este formato es legible, pero no est\u00e1ndar y puede causar errores al intercambiar datos entre sistemas.</p> <p>Es recomendable usar el formato ISO 8601 (internacional) para garantizar interoperabilidad y evitar ambig\u00fcedades. Tambi\u00e9n se acepta la versi\u00f3n simplificada YYYY-MM-DD.</p> Tipo Ejemplo Solo fecha 2023-09-27 Fecha y hora 2023-09-27 15:30:00 Fecha, hora y zona 2023-09-27 15:30:00+02"},{"location":"09-formatos-de-fecha-en-postgresql/#formato-iso-8601-internacional","title":"Formato ISO 8601 (internacional)","text":"<p>ISO 8601 es un est\u00e1ndar para representar fechas y horas con formato claro y compatible. Estructura general: AAAA-MM-DDTHH:MM:SS.sss+ZZ:ZZ</p> Elemento Ejemplo / Significado Solo fecha 2023-09-27 Fecha y hora 2023-09-27T15:30:00 Fecha y hora con milisegundos 2023-09-27T15:30:00.000 Fecha y hora con zona horaria 2023-09-27T15:30:00+02:00 Separador entre fecha y hora T Zona horaria +02:00 / +02 <p>PostgreSQL acepta este formato directamente en consultas e inserciones.</p> <pre><code>SELECT '2025-09-27T18:45:00.000+02:00'::TIMESTAMPTZ;\n</code></pre>"},{"location":"09-formatos-de-fecha-en-postgresql/#fechas-en-formato-iso-8601-sin-separadores","title":"Fechas en formato ISO 8601 sin separadores","text":"<p>PostgreSQL admite tambi\u00e9n la variante compacta del formato ISO, sin guiones ni dos puntos:</p> <pre><code>YYYYMMDDTHHMMSS\n</code></pre> <pre><code>SELECT '20250927T183000'::TIMESTAMP;\n-- Resultado: 2025-09-27 18:30:00\n</code></pre> <pre><code>SELECT '20250927T183000+0200'::TIMESTAMPTZ;\n-- Resultado: 2025-09-27 18:30:00+02\n</code></pre>"},{"location":"09-formatos-de-fecha-en-postgresql/#comparacion-de-formatos","title":"Comparaci\u00f3n de formatos","text":"Formato Cumple ISO 8601 Recomendado 2025-09-27T18:30:00 \u2705 ISO extendido \u2705 S\u00ed 20250927T183000 \u2705 ISO b\u00e1sico \u26a0\ufe0f Aceptable, menos legible 2025-09-27 18:30:00 \u274c No ISO estricto \u26a0\ufe0f Legible, pero informal"},{"location":"09-formatos-de-fecha-en-postgresql/#cuando-usar-formato-compacto","title":"Cu\u00e1ndo usar formato compacto","text":"<ul> <li>Cuando se cargan datos masivos.</li> <li>Cuando se conoce el formato exacto de destino.</li> <li>Cuando se desea optimizar espacio o parsing.</li> </ul> <p>Usa el formato extendido (YYYY-MM-DDTHH:MM:SS) en informes, APIs o documentaci\u00f3n formal.</p>"},{"location":"09-formatos-de-fecha-en-postgresql/#utc-tiempo-universal-coordinado","title":"UTC: Tiempo Universal Coordinado","text":"<p>UTC es el est\u00e1ndar global de tiempo sin ajustes de horario de verano, sustituyendo al antiguo GMT. Un TIMESTAMP WITH TIME ZONE se guarda internamente en UTC. PostgreSQL convierte autom\u00e1ticamente entre UTC y la zona local al mostrarlo.</p> <pre><code>-- Mostrado en hora local:\nSELECT NOW();  -- 2025-09-27 17:15:00+02\n\n-- Mostrado como UTC:\nSELECT NOW() AT TIME ZONE 'UTC';  -- 2025-09-27 15:15:00+00\n</code></pre> <p>De esta forma, las comparaciones y almacenamiento de fechas son consistentes globalmente. Siempre que trabajes con m\u00faltiples zonas horarias, usa TIMESTAMPTZ.</p>"},{"location":"09-formatos-de-fecha-en-postgresql/#tipo-de-dato-timestamptz","title":"Tipo de dato TIMESTAMPTZ","text":"Tipo de dato Significado TIMESTAMP Fecha y hora sin zona horaria TIMESTAMPTZ Fecha y hora con zona horaria"},{"location":"09-formatos-de-fecha-en-postgresql/#como-funciona-realmente-timestamptz","title":"C\u00f3mo funciona realmente TIMESTAMPTZ","text":"<p>PostgreSQL almacena internamente el valor en UTC y lo muestra ajustado a la zona horaria del cliente.</p> <pre><code>CREATE TABLE eventos (\n  id SERIAL PRIMARY KEY,\n  nombre TEXT,\n  fecha TIMESTAMPTZ\n);\n\nINSERT INTO eventos (nombre, fecha)\nVALUES ('Concierto', '2025-09-27 20:00:00');\n</code></pre> <p>Internamente se guarda como: 2025-09-27 18:00:00+00 (UTC) Pero al consultar desde Europe/Madrid (UTC+2) se muestra: 2025-09-27 20:00:00+02</p>"},{"location":"09-formatos-de-fecha-en-postgresql/#ventajas-de-timestamptz","title":"Ventajas de TIMESTAMPTZ","text":"<ul> <li>Ideal para aplicaciones internacionales.</li> <li>Permite almacenar un valor estandarizado y mostrarlo localmente.</li> <li>Facilita comparaciones precisas entre zonas horarias.</li> </ul>"},{"location":"09-formatos-de-fecha-en-postgresql/#comparacion-practica","title":"Comparaci\u00f3n pr\u00e1ctica","text":"<pre><code>-- Timestamp sin zona horaria\nSELECT TIMESTAMP '2025-09-27 20:00:00';\n\n-- Timestamp con zona horaria\nSELECT TIMESTAMPTZ '2025-09-27 20:00:00+02';\n</code></pre> <p>El primero es una hora absoluta sin contexto. El segundo permite conversi\u00f3n autom\u00e1tica entre zonas.</p>"},{"location":"09-formatos-de-fecha-en-postgresql/#conclusion","title":"Conclusi\u00f3n","text":"<p>Siempre que trabajes con usuarios en distintas regiones o necesites conservar la hora real de un evento global, usa TIMESTAMPTZ.</p>"},{"location":"10-instalacion-y-configuracion-de-postgresql-pgadmin-jdbc/","title":"10 \u2013 Instalaci\u00f3n y Configuraci\u00f3n de PostgreSQL + pgAdmin + JDBC","text":""},{"location":"10-instalacion-y-configuracion-de-postgresql-pgadmin-jdbc/#instalacion-de-postgresql-y-pgadmin-en-windows","title":"Instalaci\u00f3n de PostgreSQL y pgAdmin en Windows","text":"<p>Descarga el instalador oficial desde:</p> <pre><code>https://www.postgresql.org/download/windows/\n</code></pre> <ol> <li>Ejecuta el instalador de EnterpriseDB (EDB) y selecciona los componentes:<ul> <li>PostgreSQL Server</li> <li>pgAdmin 4</li> <li>Command Line Tools</li> </ul> </li> <li>Define una contrase\u00f1a para el usuario postgres.</li> <li>Deja el puerto por defecto 5432.</li> <li>Anota la carpeta de datos (por ejemplo C:\\Program Files\\PostgreSQL\\16\\data).</li> </ol> <p>Al finalizar, PostgreSQL se inicia autom\u00e1ticamente como servicio de Windows. Puedes comprobarlo en el Administrador de tareas (pesta\u00f1a Servicios) o con PowerShell:</p> <pre><code>net start postgresql-x64-16\n</code></pre>"},{"location":"10-instalacion-y-configuracion-de-postgresql-pgadmin-jdbc/#activar-acceso-por-contrasena-en-windows","title":"Activar acceso por contrase\u00f1a en Windows","text":"<p>Por defecto, el usuario postgres puede acceder localmente sin contrase\u00f1a. Para requerir contrase\u00f1a (necesario para pgAdmin, DBeaver o JDBC):</p> <p>1.- Abre el archivo:</p> <pre><code>C:\\Program Files\\PostgreSQL\\16\\data\\pg_hba.conf\n</code></pre> <p>2.- Busca la l\u00ednea:</p> <pre><code>local   all             postgres                                trust\n</code></pre> <p>3.- C\u00e1mbiala por:</p> <pre><code>local   all             postgres                                md5\n</code></pre> <p>Opcional: permitir acceso local TCP/IP:</p> <pre><code>host    all             all             127.0.0.1/32            md5\n</code></pre> <p>Guarda los cambios y reinicia el servicio:</p> <pre><code>net stop postgresql-x64-16\nnet start postgresql-x64-16\n</code></pre> <p>Verifica el acceso:</p> <pre><code>psql -U postgres -h localhost\n</code></pre> <p>Deber\u00eda pedir la contrase\u00f1a configurada durante la instalaci\u00f3n.</p>"},{"location":"10-instalacion-y-configuracion-de-postgresql-pgadmin-jdbc/#instalacion-de-postgresql-y-pgadmin-en-linux-ubuntu-mint-pop_os-etc","title":"Instalaci\u00f3n de PostgreSQL y pgAdmin en Linux (Ubuntu, Mint, Pop!_OS, etc.)","text":""},{"location":"10-instalacion-y-configuracion-de-postgresql-pgadmin-jdbc/#opcion-1-repositorios-estandar-version-estable-de-ubuntu","title":"Opci\u00f3n 1 \u2013 Repositorios est\u00e1ndar (versi\u00f3n estable de Ubuntu)","text":"<pre><code>sudo apt update\nsudo apt install postgresql postgresql-contrib pgadmin4 -y\n</code></pre>"},{"location":"10-instalacion-y-configuracion-de-postgresql-pgadmin-jdbc/#opcion-2-recomendada-repositorios-oficiales-de-postgresqlorg","title":"Opci\u00f3n 2 (recomendada) \u2013 Repositorios oficiales de PostgreSQL.org","text":"<p>Permite instalar versiones m\u00e1s recientes (por ejemplo PostgreSQL 16 o 17).</p> <pre><code>sudo apt install wget ca-certificates -y\nwget -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | \\\n   sudo apt-key add -\n. /etc/os-release\necho \"deb http://apt.postgresql.org/pub/repos/apt ${VERSION_CODENAME}-pgdg main\" | \\\n   sudo tee /etc/apt/sources.list.d/pgdg.list\nsudo apt update\nsudo apt install postgresql postgresql-contrib -y\n</code></pre> <p>Verifica que el servicio est\u00e9 activo:</p> <pre><code>sudo systemctl status postgresql\n</code></pre> <p>(Opcional) Instalar una versi\u00f3n espec\u00edfica:</p> <pre><code>sudo apt install postgresql-16 postgresql-contrib -y\n</code></pre>"},{"location":"10-instalacion-y-configuracion-de-postgresql-pgadmin-jdbc/#cambiar-la-contrasena-del-usuario-postgres","title":"Cambiar la contrase\u00f1a del usuario postgres","text":"<pre><code>sudo -u postgres psql\n</code></pre> <pre><code>ALTER USER postgres PASSWORD 'nueva_contrase\u00f1a';\n</code></pre> <p>Ejemplo:</p> <pre><code>ALTER USER postgres PASSWORD 'admin123';\n</code></pre> <pre><code>\\q\n</code></pre>"},{"location":"10-instalacion-y-configuracion-de-postgresql-pgadmin-jdbc/#permitir-acceso-por-contrasena-modo-md5","title":"Permitir acceso por contrase\u00f1a (modo md5)","text":"<p>Edita el archivo de configuraci\u00f3n de autenticaci\u00f3n:</p> <pre><code>sudo nano /etc/postgresql/16/main/pg_hba.conf\n</code></pre> <p>Reemplaza:</p> <pre><code>local   all             postgres                                peer\n</code></pre> <p>Por:</p> <pre><code>local   all             postgres                                md5\n</code></pre> <p>Y a\u00f1ade:</p> <pre><code>host    all             all             127.0.0.1/32            md5\n</code></pre> <pre><code>sudo systemctl restart postgresql\n</code></pre> M\u00e9todo Significado peer Usa el usuario del sistema operativo (sin contrase\u00f1a) md5 Requiere contrase\u00f1a cifrada (recomendado) trust Permite acceso sin contrase\u00f1a (solo para pruebas locales)"},{"location":"10-instalacion-y-configuracion-de-postgresql-pgadmin-jdbc/#crear-usuarios-y-bases-de-datos","title":"Crear usuarios y bases de datos","text":"<pre><code>sudo -u postgres psql\n</code></pre> <pre><code>CREATE USER juanma WITH PASSWORD '12345';\n\nCREATE DATABASE cursos;\n\nGRANT ALL PRIVILEGES ON DATABASE cursos TO juanma;\n\n\\c cursos\n\nGRANT ALL PRIVILEGES ON SCHEMA public TO juanma;\n\nALTER ROLE juanma CREATEDB;\n</code></pre>"},{"location":"10-instalacion-y-configuracion-de-postgresql-pgadmin-jdbc/#conectarse-con-psql-y-pgadmin","title":"Conectarse con psql y pgAdmin","text":""},{"location":"10-instalacion-y-configuracion-de-postgresql-pgadmin-jdbc/#desde-la-terminal","title":"Desde la terminal","text":"<pre><code>psql -U juanma -d cursos -h localhost -W\n</code></pre>"},{"location":"10-instalacion-y-configuracion-de-postgresql-pgadmin-jdbc/#desde-pgadmin","title":"Desde pgAdmin","text":"<ol> <li>Abre pgAdmin y crea una Master Password local.</li> <li>En Servers \u2192 Create \u2192 Server:<ul> <li>Name: Localhost</li> <li>Host: 127.0.0.1</li> <li>Port: 5432</li> <li>Username: postgres</li> <li>Password: la configurada</li> </ul> </li> <li>Guarda la conexi\u00f3n y accede a la base de datos.</li> </ol>"},{"location":"10-instalacion-y-configuracion-de-postgresql-pgadmin-jdbc/#instalar-el-driver-jdbc","title":"Instalar el driver JDBC","text":""},{"location":"10-instalacion-y-configuracion-de-postgresql-pgadmin-jdbc/#instalacion-manual","title":"Instalaci\u00f3n manual","text":"<p>Descarga desde:</p> <pre><code>https://jdbc.postgresql.org/download.html\n</code></pre> <p>Archivo t\u00edpico:</p> <pre><code>postgresql-42.7.2.jar\n</code></pre> <p>Estructura de proyecto:</p> <pre><code>ProyectoJava/\n\u251c\u2500 src/\n\u2514\u2500 lib/postgresql-42.7.2.jar\n</code></pre> <p>Compila y ejecuta con:</p> <pre><code>javac -cp \".:lib/postgresql-42.7.2.jar\" Main.java\njava  -cp \".:lib/postgresql-42.7.2.jar\" Main\n</code></pre> <p>(En Windows usa ; en lugar de :)</p>"},{"location":"10-instalacion-y-configuracion-de-postgresql-pgadmin-jdbc/#instalacion-con-maven","title":"Instalaci\u00f3n con Maven","text":"<pre><code>&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.postgresql&lt;/groupId&gt;\n        &lt;artifactId&gt;postgresql&lt;/artifactId&gt;\n        &lt;version&gt;42.7.2&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre> <pre><code>mvn dependency:tree\n</code></pre> <p>Deber\u00edas ver:</p> <pre><code>org.postgresql:postgresql:jar:42.7.2:compile\n</code></pre>"}]}